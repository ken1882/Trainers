from copy import copy
import enum
from time import sleep

import cv2
import numpy as np
from desktopmagic.screengrab_win32 import getRectAsImage

import _G
import graphics
import Input
import position
import utils
from _G import log_debug, log_error, log_info, log_warning, resume, uwait, wait
from _G import CVMatchHardRate,CVMatchMinCount,CVMatchStdRate,CVLocalDistance
from utils import img2str, isdigit, ocr_rect
import re

Enum = {
  'StageSelect': {
    'pos': ((129, 472),(175, 523),(36, 33),(485, 31),(649, 32),(446, 59),),
    'color': ((255, 255, 237),(255, 255, 237),(118, 138, 166),(117, 176, 212),(118, 32, 18),(215, 163, 85),)
  },
  'HelperSelect': {
    'pos': ((36, 40),(55, 102),(95, 112),(287, 111),(332, 218),(731, 217),(485, 30),(909, 508),),
    'color': ((108, 120, 138),(211, 161, 71),(211, 161, 71),(211, 161, 71),(235, 235, 235),(235, 235, 231),(118, 178, 214),(121, 121, 121),),
  },
  'HelperSelect2': {
    'pos': ((38, 38),(66, 110),(52, 24),(488, 30),(562, 198),),
    'color': ((108, 122, 140),(211, 161, 71),(70, 104, 124),(117, 175, 211),(239, 237, 235),),
  },
  'CombatPrepare': {
    'pos': ((35, 33),(51, 480),(68, 359),(241, 389),(410, 423),(752, 505),(679, 192),(680, 234),(677, 308),),
    'color': ((118, 139, 168),(241, 235, 223),(200, 68, 43),(48, 112, 182),(251, 177, 40),(232, 57, 16),(65, 102, 121),(65, 100, 121),(65, 102, 121),)
  },
  'CombatPrepare2': {
    'pos': ((33, 41),(52, 26),(69, 117),(753, 491),(674, 169),),
    'color': ((105, 117, 136),(66, 101, 121),(92, 182, 235),(239, 61, 14),(249, 249, 249),)
  },
  'SceneStory': {
    'pos': ((902, 37),(901, 48),(914, 51),(950, 48),(953, 39),(923, 45),(936, 46),),
    'color': ((199, 213, 207),(195, 205, 207),(143, 159, 170),(178, 175, 191),(182, 184, 195),(255, 255, 255),(129, 137, 154),),
  },
  'SceneStory2': {
    'pos': ((895, 39),(898, 49),(920, 52),(949, 47),(948, 37),(931, 44),),
    'color': ((199, 213, 207),(193, 204, 206),(175, 180, 191),(178, 177, 195),(183, 185, 196),(145, 145, 161),)
  },
  'CombatVictory': {
    'pos': ((364, 113),(485, 120),(618, 113),(438, 449),(397, 463),(448, 477),),
    'color': ((255, 255, 255),(242, 242, 243),(245, 245, 246),(127, 112, 41),(194, 195, 201),(127, 80, 0),)
  },
  'CombatVictory2': {
    'pos': ((364, 111),(419, 117),(484, 119),(618, 109),(396, 465),(436, 449),(446, 477),),
    'color': ((255, 255, 255),(255, 255, 255),(248, 249, 249),(244, 244, 244),(255, 255, 255),(127, 112, 41),(127, 80, 0),)
  },
  'CombatVictory3': {
    'pos': ((567, 79),(677, 107),(791, 117),(837, 96),(816, 512),),
    'color': ((255, 251, 235),(255, 251, 235),(255, 251, 235),(255, 225, 83),(117, 120, 146),)
  },
  'CombatRewards': {
    'pos': ((362, 108),(374, 109),(466, 111),(553, 111),(614, 113),(434, 444),(445, 472),),
    'color': ((255, 255, 255),(255, 255, 255),(255, 255, 255),(240, 240, 240),(255, 255, 255),(127, 114, 52),(127, 82, 0),)
  },
  'CombatRewards2': {
    'pos': ((361, 110),(467, 111),(517, 302),(436, 444),(443, 471),),
    'color': ((255, 255, 255),(255, 255, 255),(242, 242, 225),(127, 115, 51),(127, 84, 0),)
  },
  'RematchEnd': {
    'pos': ((197, 62),(264, 194),(287, 192),(231, 507),(433, 502),(540, 504),(455, 193),(774, 505),(700, 121),),
    'color': ((238, 238, 238),(166, 175, 169),(65, 102, 121),(238, 238, 238),(121, 122, 150),(121, 122, 150),(65, 102, 121),(238, 238, 238),(253, 86, 86),),
  },
  'RematchEnd2': {
    'pos': ((346, 57),(628, 59),(280, 188),(345, 197),(258, 514),(438, 502),(472, 194),),
    'color': ((142, 158, 158),(96, 103, 110),(65, 102, 121),(251, 251, 251),(238, 238, 238),(121, 122, 150),(166, 175, 169),),
  },
  'RematchEnd3': {
    'pos': ((240, 71),(334, 68),(636, 60),(306, 188),(437, 495),(843, 103),),
    'color': ((238, 238, 238),(214, 162, 72),(94, 101, 102),(65, 102, 121),(121, 122, 150),(77, 63, 9),),
  },
  'HomePage': {
    'pos': ((148, 372),(153, 448),(507, 33),(649, 35),(796, 34),(59, 369),(19, 417),(690, 318),),
    'color': ((113, 137, 219),(233, 255, 241),(123, 127, 191),(66, 49, 37),(36, 110, 137),(251, 234, 207),(62, 231, 119),(242, 210, 125),)
  },
  'HomePage2': {
    'pos': ((507, 27),(647, 35),(792, 34),(908, 473),(148, 396),(82, 328),(108, 400),),
    'color': ((43, 76, 168),(66, 49, 32),(37, 115, 139),(189, 87, 70),(113, 137, 219),(0, 163, 104),(158, 128, 101),)
  },
  'HomePage3': {
    'pos': ((65, 339),(159, 399),(132, 485),(907, 477),(113, 403),),
    'color': ((0, 188, 120),(113, 137, 219),(213, 97, 77),(186, 80, 64),(158, 126, 101),)
  },
  'VsSpiritSelect': {
    'pos': ((152, 412),(187, 423),(311, 431),(472, 405),(665, 513),(903, 511),(75, 488),),
    'color': ((251, 109, 52),(255, 255, 255),(255, 255, 255),(252, 104, 62),(239, 60, 15),(255, 167, 101),(253, 253, 253),)
  },
  'StageSelect2': {
    'pos': ((36, 45),(53, 30),(473, 65),(973, 27),(690, 88),),
    'color': ((128, 137, 147),(67, 102, 122),(215, 163, 85),(122, 142, 171),(215, 163, 85),)
  },
  'StageSelect3': {
    'pos': ((35, 32),(53, 29),(487, 31),(492, 82),(689, 85),(976, 24),),
    'color': ((121, 142, 172),(67, 102, 122),(117, 175, 212),(215, 163, 85),(219, 174, 112),(120, 137, 170),)
  },
  'StageSelect4': {
    'pos': ((596, 81),(478, 81),(33, 39),(482, 27),),
    'color': ((215, 163, 85),(215, 163, 85),(107, 121, 143),(117, 184, 215),)
  },
  'Errand': {
    'pos': ((9, 24),(36, 47),(54, 32),(485, 30),(975, 40),(933, 17),(974, 554),(9, 550),(564, 55),(178, 301)),
    'color': ((169, 205, 253),(144, 153, 159),(139, 160, 172),(118, 178, 214),(156, 164, 173),(233, 233, 233),(229, 229, 228),(229, 212, 220),(233, 233, 233),(235,228,226))
  },
  'Errand2': {
    'pos': ((11, 24),(35, 36),(53, 31),(125, 29),(488, 34),(8, 547),(961, 552),(935, 46),(974, 35),),
    'color': ((168, 203, 253),(113, 129, 153),(70, 104, 124),(66, 101, 121),(118, 168, 208),(229, 212, 220),(224, 224, 224),(229, 229, 229),(114, 123, 137),)
  },
  'Errand3': {
    'pos': ((26, 36),(19, 20),(35, 42),(53, 29),(488, 29),(934, 48),(12, 544),(63, 187),(867, 53),),
    'color': ((223, 229, 239),(166, 201, 251),(107, 119, 134),(68, 103, 122),(117, 177, 215),(232, 232, 232),(233, 216, 224),(93, 100, 113),(236, 236, 236),)
  },
  'Errand4': {
    'pos': ((32, 46),(52, 29),(484, 31),(16, 547),(930, 46),(34, 105),),
    'color': ((120, 129, 142),(66, 101, 121),(117, 175, 212),(229, 212, 220),(229, 229, 229),(85, 90, 101),)
  },
  'Errand5': {
    'pos': ((31, 46),(54, 29),(486, 29),(16, 545),(52, 197),),
    'color': ((114, 124, 137),(109, 136, 151),(117, 176, 214),(230, 213, 221),(81, 86, 97),)
  },
  'BSHome': {
    'pos': ((874, 52),(50, 496),(233, 463),(547, 493),(951, 469),(178, 187),),
    'color': ((18, 20, 41),(5, 15, 39),(44, 18, 23),(5, 12, 34),(5, 13, 34),(0, 191, 219),)
  },
  'BSHome2': {
    'pos': ((25, 75),(45, 394),(70, 548),(45, 449),(352, 485),(472, 506),),
    'color': ((18, 19, 37),(14, 16, 29),(9, 11, 20),(254, 254, 253),(19, 22, 40),(34, 35, 63),)
  },
  'BSHome3': {
    'pos': ((9, 68),(46, 449),(280, 507),(299, 486),(540, 545),(524, 23),),
    'color': ((18, 19, 37),(252, 252, 253),(34, 36, 64),(21, 23, 44),(12, 12, 20),(18, 18, 30),)
  },
  'Disconnected': {
    'pos': ((348, 162),(647, 164),(232, 183),(324, 401),(664, 404),(599, 403),),
    'color': ((142, 157, 158),(220, 156, 70),(238, 238, 238),(121, 122, 150),(243, 137, 85),(243, 137, 85),)
  },
  'RematchSetting': {
    'pos': ((123, 47),(334, 61),(354, 54),(171, 284),(316, 502),(661, 508),(899, 495),),
    'color': ((238, 238, 238),(210, 160, 72),(139, 156, 156),(65, 100, 121),(121, 122, 150),(243, 137, 85),(112, 27, 12),)
  }
}

def get_current_stage():
  global Enum
  if _G.LastFrameCount != _G.FrameCount:
    _G.CurrentStage = None
    _G.LastFrameCount = _G.FrameCount
  else:
    return _G.CurrentStage
  
  for key in Enum:
    stg = Enum[key]
    if graphics.is_pixel_match(stg['pos'], stg['color']):
      _G.CurrentStage = key
      return key

  return None

def check_pixels(pixstruct):
  return graphics.is_pixel_match(pixstruct['pos'], pixstruct['color'])

StageDepth = 0
LastStage = '_'
def is_stage(stg):
  global LastStage,StageDepth
  s = get_current_stage()
  if s != LastStage:
    _G.log_info("Current stage:", s)
    LastStage = s
    StageDepth = 0
  else:
    StageDepth += 1
  return s and stg in s

def has_completed_errands():
  return graphics.is_pixel_match(
    ((869, 320),(872, 316),(869, 312),(865, 315),),
    ((223, 44, 44),(223, 44, 44),(223, 44, 44),(223, 44, 44),)
  )